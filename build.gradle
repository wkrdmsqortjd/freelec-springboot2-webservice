buildscript{
    ext {
        springBootVersion = '2.4.1'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}


apply plugin: 'java'
apply plugin: 'eclipse'
/*apply plugin: 'war'*/
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group 'com.wkrdmsqortjd.project'
version '1.0.4-SNAPSHOT-'+new Date().format("yyyyMMddHHmmss")
sourceCompatibility = 11

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}
repositories {
    mavenCentral()
}

dependencies {
    implementation 'junit:junit:4.12'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'

    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('org.springframework.boot:spring-boot-starter-mustache')
    testImplementation( 'org.springframework.boot:spring-boot-starter-test' )

    // lombok
    implementation('org.projectlombok:lombok')
    annotationProcessor('org.projectlombok:lombok')
    testImplementation('org.projectlombok:lombok')
    testAnnotationProcessor('org.projectlombok:lombok')

    // Spring Data Jpa
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation("org.mariadb.jdbc:mariadb-java-client")
    implementation('com.h2database:h2')
//    implementation('org.springframework.boot:spring-boot-starter-oauth2-client') // 권한 관련
//    implementation('org.springframework.session:spring-session-jdbc') // 권한 관련
//    testImplementation("org.springframework.security:spring-security-test") // 권한 관련

    implementation ('mysql:mysql-connector-java')
    compileOnly ('org.projectlombok:lombok')
    testCompileOnly ('org.projectlombok:lombok')
    developmentOnly ('org.springframework.boot:spring-boot-devtools')
//    providedRuntime ('org.springframework.boot:spring-boot-starter-tomcat')
    implementation ('org.springframework.boot:spring-boot-starter-security')
    implementation ('org.springframework.boot:spring-boot-starter-validation')

}

test {
    useJUnitPlatform()
}